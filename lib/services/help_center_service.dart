import 'dart:convert';
import 'dart:math';
import 'package:flutter/foundation.dart';
import 'package:http/http.dart' as http;
import 'package:kipik_v5/models/faq_item.dart';
import 'package:kipik_v5/models/tutorial.dart';
import 'package:kipik_v5/utils/constants.dart';
import 'package:shared_preferences/shared_preferences.dart';
import '../core/database_manager.dart'; // ‚úÖ AJOUT√â pour d√©tecter le mode

/// Service de centre d'aide unifi√© (Production + D√©mo)
/// En mode d√©mo : utilise des donn√©es factices r√©alistes avec cache simul√©
/// En mode production : utilise l'API HTTP r√©elle avec cache SharedPreferences
class HelpCenterService with ChangeNotifier {
  final String _baseUrl = Constants.apiBaseUrl;
  
  // Cache des donn√©es
  List<FAQItem>? _cachedProFaqItems;
  List<FAQItem>? _cachedClientFaqItems;
  List<Tutorial>? _cachedProTutorials;
  List<Tutorial>? _cachedClientTutorials;
  DateTime? _lastFaqFetchTime;
  DateTime? _lastTutorialsFetchTime;
  
  // Dur√©e de validit√© du cache (en heures)
  final int _cacheDuration = 24;

  // ‚úÖ DONN√âES MOCK POUR LES D√âMOS
  final Map<String, List<Map<String, dynamic>>> _mockSupportRequests = {};
  int _mockRequestCounter = 1;

  /// ‚úÖ M√âTHODE PRINCIPALE - D√©tection automatique du mode
  bool get _isDemoMode => DatabaseManager.instance.isDemoMode;

  /// ‚úÖ R√âCUP√âRER FAQ (mode auto)
  Future<List<FAQItem>> getFAQItems({required String userType}) async {
    if (_isDemoMode) {
      print('üé≠ Mode d√©mo - R√©cup√©ration FAQ factices');
      return await _getFAQItemsMock(userType: userType);
    } else {
      print('üè≠ Mode production - R√©cup√©ration FAQ r√©elles');
      return await _getFAQItemsHttp(userType: userType);
    }
  }

  /// ‚úÖ HTTP - FAQ r√©elles
  Future<List<FAQItem>> _getFAQItemsHttp({required String userType}) async {
    // V√©rifier si on a des donn√©es en cache et si elles sont encore valides
    if (userType == 'pro' && 
        _cachedProFaqItems != null && 
        _lastFaqFetchTime != null &&
        DateTime.now().difference(_lastFaqFetchTime!).inHours < _cacheDuration) {
      return _cachedProFaqItems!;
    } else if (userType == 'client' && 
        _cachedClientFaqItems != null && 
        _lastFaqFetchTime != null &&
        DateTime.now().difference(_lastFaqFetchTime!).inHours < _cacheDuration) {
      return _cachedClientFaqItems!;
    }
    
    try {
      // Tenter de r√©cup√©rer les donn√©es depuis le stockage local
      final prefs = await SharedPreferences.getInstance();
      final cachedData = prefs.getString('faq_${userType}_cache');
      
      if (cachedData != null) {
        final lastFetchTime = DateTime.fromMillisecondsSinceEpoch(
          prefs.getInt('faq_${userType}_last_fetch') ?? 0
        );
        
        if (DateTime.now().difference(lastFetchTime).inHours < _cacheDuration) {
          final List<dynamic> decodedData = jsonDecode(cachedData);
          final List<FAQItem> faqItems = decodedData
              .map((item) => FAQItem.fromJson(item as Map<String, dynamic>))
              .toList();
          
          // Mettre √† jour le cache en m√©moire
          if (userType == 'pro') {
            _cachedProFaqItems = faqItems;
          } else {
            _cachedClientFaqItems = faqItems;
          }
          _lastFaqFetchTime = lastFetchTime;
          
          return faqItems;
        }
      }
      
      // Si pas de cache valide, faire une requ√™te API
      final response = await http.get(
        Uri.parse('$_baseUrl/help-center/faq?userType=$userType'),
        headers: {'Content-Type': 'application/json'},
      );
      
      if (response.statusCode == 200) {
        final List<dynamic> data = jsonDecode(response.body);
        final List<FAQItem> faqItems = data
            .map((item) => FAQItem.fromJson(item as Map<String, dynamic>))
            .toList();
        
        // Mettre √† jour le cache
        prefs.setString('faq_${userType}_cache', response.body);
        prefs.setInt('faq_${userType}_last_fetch', DateTime.now().millisecondsSinceEpoch);
        
        // Mettre √† jour le cache en m√©moire
        if (userType == 'pro') {
          _cachedProFaqItems = faqItems;
        } else {
          _cachedClientFaqItems = faqItems;
        }
        _lastFaqFetchTime = DateTime.now();
        
        return faqItems;
      } else {
        throw Exception('√âchec du chargement des FAQs: ${response.statusCode}');
      }
    } catch (e) {
      if (kDebugMode) {
        print('Erreur lors du chargement des FAQs HTTP: $e');
      }
      
      // En cas d'erreur, utiliser les donn√©es de d√©mo
      return _getEnhancedDemoFAQItems(userType: userType);
    }
  }

  /// ‚úÖ MOCK - FAQ factices
  Future<List<FAQItem>> _getFAQItemsMock({required String userType}) async {
    await Future.delayed(const Duration(milliseconds: 400)); // Simuler latence r√©seau

    // V√©rifier cache en m√©moire
    if (userType == 'pro' && 
        _cachedProFaqItems != null && 
        _lastFaqFetchTime != null &&
        DateTime.now().difference(_lastFaqFetchTime!).inHours < _cacheDuration) {
      return _cachedProFaqItems!;
    } else if (userType == 'client' && 
        _cachedClientFaqItems != null && 
        _lastFaqFetchTime != null &&
        DateTime.now().difference(_lastFaqFetchTime!).inHours < _cacheDuration) {
      return _cachedClientFaqItems!;
    }

    // G√©n√©rer donn√©es d√©mo
    final faqItems = _getEnhancedDemoFAQItems(userType: userType);
    
    // Mettre √† jour le cache en m√©moire
    if (userType == 'pro') {
      _cachedProFaqItems = faqItems;
    } else {
      _cachedClientFaqItems = faqItems;
    }
    _lastFaqFetchTime = DateTime.now();
    
    return faqItems;
  }

  /// ‚úÖ R√âCUP√âRER TUTORIELS (mode auto)
  Future<List<Tutorial>> getTutorials({required String userType}) async {
    if (_isDemoMode) {
      print('üé≠ Mode d√©mo - R√©cup√©ration tutoriels factices');
      return await _getTutorialsMock(userType: userType);
    } else {
      print('üè≠ Mode production - R√©cup√©ration tutoriels r√©els');
      return await _getTutorialsHttp(userType: userType);
    }
  }

  /// ‚úÖ HTTP - Tutoriels r√©els
  Future<List<Tutorial>> _getTutorialsHttp({required String userType}) async {
    // V√©rifier si on a des donn√©es en cache et si elles sont encore valides
    if (userType == 'pro' && 
        _cachedProTutorials != null && 
        _lastTutorialsFetchTime != null &&
        DateTime.now().difference(_lastTutorialsFetchTime!).inHours < _cacheDuration) {
      return _cachedProTutorials!;
    } else if (userType == 'client' && 
        _cachedClientTutorials != null && 
        _lastTutorialsFetchTime != null &&
        DateTime.now().difference(_lastTutorialsFetchTime!).inHours < _cacheDuration) {
      return _cachedClientTutorials!;
    }
    
    try {
      // Tenter de r√©cup√©rer les donn√©es depuis le stockage local
      final prefs = await SharedPreferences.getInstance();
      final cachedData = prefs.getString('tutorials_${userType}_cache');
      
      if (cachedData != null) {
        final lastFetchTime = DateTime.fromMillisecondsSinceEpoch(
          prefs.getInt('tutorials_${userType}_last_fetch') ?? 0
        );
        
        if (DateTime.now().difference(lastFetchTime).inHours < _cacheDuration) {
          final List<dynamic> decodedData = jsonDecode(cachedData);
          final List<Tutorial> tutorials = decodedData
              .map((item) => Tutorial.fromJson(item as Map<String, dynamic>))
              .toList();
          
          // Mettre √† jour le cache en m√©moire
          if (userType == 'pro') {
            _cachedProTutorials = tutorials;
          } else {
            _cachedClientTutorials = tutorials;
          }
          _lastTutorialsFetchTime = lastFetchTime;
          
          return tutorials;
        }
      }
      
      // Si pas de cache valide, faire une requ√™te API
      final response = await http.get(
        Uri.parse('$_baseUrl/help-center/tutorials?userType=$userType'),
        headers: {'Content-Type': 'application/json'},
      );
      
      if (response.statusCode == 200) {
        final List<dynamic> data = jsonDecode(response.body);
        final List<Tutorial> tutorials = data
            .map((item) => Tutorial.fromJson(item as Map<String, dynamic>))
            .toList();
        
        // Mettre √† jour le cache
        prefs.setString('tutorials_${userType}_cache', response.body);
        prefs.setInt('tutorials_${userType}_last_fetch', DateTime.now().millisecondsSinceEpoch);
        
        // Mettre √† jour le cache en m√©moire
        if (userType == 'pro') {
          _cachedProTutorials = tutorials;
        } else {
          _cachedClientTutorials = tutorials;
        }
        _lastTutorialsFetchTime = DateTime.now();
        
        return tutorials;
      } else {
        throw Exception('√âchec du chargement des tutoriels: ${response.statusCode}');
      }
    } catch (e) {
      if (kDebugMode) {
        print('Erreur lors du chargement des tutoriels HTTP: $e');
      }
      
      // En cas d'erreur, utiliser les donn√©es de d√©mo
      return _getEnhancedDemoTutorials(userType: userType);
    }
  }

  /// ‚úÖ MOCK - Tutoriels factices
  Future<List<Tutorial>> _getTutorialsMock({required String userType}) async {
    await Future.delayed(const Duration(milliseconds: 500)); // Simuler latence

    // V√©rifier cache en m√©moire
    if (userType == 'pro' && 
        _cachedProTutorials != null && 
        _lastTutorialsFetchTime != null &&
        DateTime.now().difference(_lastTutorialsFetchTime!).inHours < _cacheDuration) {
      return _cachedProTutorials!;
    } else if (userType == 'client' && 
        _cachedClientTutorials != null && 
        _lastTutorialsFetchTime != null &&
        DateTime.now().difference(_lastTutorialsFetchTime!).inHours < _cacheDuration) {
      return _cachedClientTutorials!;
    }

    // G√©n√©rer donn√©es d√©mo
    final tutorials = _getEnhancedDemoTutorials(userType: userType);
    
    // Mettre √† jour le cache en m√©moire
    if (userType == 'pro') {
      _cachedProTutorials = tutorials;
    } else {
      _cachedClientTutorials = tutorials;
    }
    _lastTutorialsFetchTime = DateTime.now();
    
    return tutorials;
  }

  /// ‚úÖ SOUMETTRE DEMANDE SUPPORT (mode auto)
  Future<void> submitSupportRequest({
    required String userId,
    required String userEmail,
    required String subject,
    required String message,
    required String userType,
    List<String>? attachmentUrls,
  }) async {
    if (_isDemoMode) {
      await _submitSupportRequestMock(
        userId: userId,
        userEmail: userEmail,
        subject: subject,
        message: message,
        userType: userType,
        attachmentUrls: attachmentUrls,
      );
    } else {
      await _submitSupportRequestHttp(
        userId: userId,
        userEmail: userEmail,
        subject: subject,
        message: message,
        userType: userType,
        attachmentUrls: attachmentUrls,
      );
    }
  }

  /// ‚úÖ HTTP - Demande support r√©elle
  Future<void> _submitSupportRequestHttp({
    required String userId,
    required String userEmail,
    required String subject,
    required String message,
    required String userType,
    List<String>? attachmentUrls,
  }) async {
    try {
      final response = await http.post(
        Uri.parse('$_baseUrl/help-center/support-request'),
        headers: {'Content-Type': 'application/json'},
        body: jsonEncode({
          'userId': userId,
          'userEmail': userEmail,
          'subject': subject,
          'message': message,
          'userType': userType,
          'attachmentUrls': attachmentUrls ?? [],
          'timestamp': DateTime.now().toIso8601String(),
        }),
      );
      
      if (response.statusCode != 200 && response.statusCode != 201) {
        throw Exception('√âchec de l\'envoi de la demande: ${response.statusCode}');
      }
      
      print('‚úÖ Demande de support envoy√©e avec succ√®s');
    } catch (e) {
      if (kDebugMode) {
        print('Erreur lors de l\'envoi de la demande de support HTTP: $e');
      }
      
      // En mode debug, simuler un succ√®s apr√®s d√©lai
      if (kDebugMode) {
        await Future.delayed(const Duration(seconds: 2));
        return;
      } else {
        throw e;
      }
    }
  }

  /// ‚úÖ MOCK - Demande support factice
  Future<void> _submitSupportRequestMock({
    required String userId,
    required String userEmail,
    required String subject,
    required String message,
    required String userType,
    List<String>? attachmentUrls,
  }) async {
    await Future.delayed(Duration(milliseconds: 800 + Random().nextInt(500))); // Latence r√©aliste

    // Stocker la demande en m√©moire pour simulation
    final requestId = 'DEMO-REQ-${_mockRequestCounter.toString().padLeft(6, '0')}';
    _mockRequestCounter++;

    final request = {
      'id': requestId,
      'userId': userId,
      'userEmail': userEmail,
      'subject': subject,
      'message': message,
      'userType': userType,
      'attachmentUrls': attachmentUrls ?? [],
      'timestamp': DateTime.now().toIso8601String(),
      'status': 'received',
      'priority': ['low', 'medium', 'high'][Random().nextInt(3)],
      'estimatedResponseTime': '24-48h',
      '_source': 'mock',
      '_demoData': true,
    };

    if (!_mockSupportRequests.containsKey(userId)) {
      _mockSupportRequests[userId] = [];
    }
    _mockSupportRequests[userId]!.add(request);

    print('‚úÖ Demande de support d√©mo enregistr√©e: $requestId');
    print('   Sujet: $subject');
    print('   Status: ${request['status']}');
    print('   R√©ponse estim√©e: ${request['estimatedResponseTime']}');
  }

  /// ‚úÖ OBTENIR HISTORIQUE SUPPORT (mode auto) - NOUVEAU
  Future<List<Map<String, dynamic>>> getSupportHistory({required String userId}) async {
    if (_isDemoMode) {
      return await _getSupportHistoryMock(userId: userId);
    } else {
      return await _getSupportHistoryHttp(userId: userId);
    }
  }

  /// ‚úÖ HTTP - Historique support r√©el
  Future<List<Map<String, dynamic>>> _getSupportHistoryHttp({required String userId}) async {
    try {
      final response = await http.get(
        Uri.parse('$_baseUrl/help-center/support-requests?userId=$userId'),
        headers: {'Content-Type': 'application/json'},
      );
      
      if (response.statusCode == 200) {
        final List<dynamic> data = jsonDecode(response.body);
        return data.map((item) => item as Map<String, dynamic>).toList();
      } else {
        throw Exception('√âchec r√©cup√©ration historique: ${response.statusCode}');
      }
    } catch (e) {
      if (kDebugMode) {
        print('Erreur r√©cup√©ration historique support: $e');
      }
      return [];
    }
  }

  /// ‚úÖ MOCK - Historique support factice
  Future<List<Map<String, dynamic>>> _getSupportHistoryMock({required String userId}) async {
    await Future.delayed(const Duration(milliseconds: 300));

    // Retourner l'historique stock√© + quelques demandes g√©n√©r√©es
    final userRequests = _mockSupportRequests[userId] ?? [];
    
    // Ajouter quelques demandes historiques si la liste est vide
    if (userRequests.isEmpty) {
      _generateMockSupportHistory(userId);
    }

    return List<Map<String, dynamic>>.from(_mockSupportRequests[userId] ?? []);
  }

  /// ‚úÖ RECHERCHER FAQ (mode auto) - NOUVEAU
  Future<List<FAQItem>> searchFAQ({
    required String query,
    required String userType,
    String? category,
  }) async {
    final allFAQs = await getFAQItems(userType: userType);
    
    if (query.isEmpty) {
      return category != null 
          ? allFAQs.where((faq) => faq.category == category).toList()
          : allFAQs;
    }

    final queryLower = query.toLowerCase();
    var results = allFAQs.where((faq) {
      return faq.question.toLowerCase().contains(queryLower) ||
             faq.answer.toLowerCase().contains(queryLower) ||
             faq.category.toLowerCase().contains(queryLower);
    }).toList();

    if (category != null) {
      results = results.where((faq) => faq.category == category).toList();
    }

    return results;
  }

  /// ‚úÖ OBTENIR CAT√âGORIES FAQ (mode auto) - NOUVEAU
  Future<List<String>> getFAQCategories({required String userType}) async {
    final allFAQs = await getFAQItems(userType: userType);
    final categories = allFAQs.map((faq) => faq.category).toSet().toList();
    categories.sort();
    return categories;
  }

  /// ‚úÖ M√âTHODE DE DIAGNOSTIC
  Future<void> debugHelpCenterService() async {
    print('üîç Debug HelpCenterService:');
    print('  - Mode d√©mo: $_isDemoMode');
    print('  - Base active: ${DatabaseManager.instance.activeDatabaseConfig.name}');

    if (_isDemoMode) {
      print('  - Demandes support mock: ${_mockSupportRequests.length} utilisateurs');
      final totalRequests = _mockSupportRequests.values.fold(0, (sum, list) => sum + list.length);
      print('  - Total demandes mock: $totalRequests');
    }

    print('  - Cache FAQ Pro: ${_cachedProFaqItems?.length ?? 0} items');
    print('  - Cache FAQ Client: ${_cachedClientFaqItems?.length ?? 0} items');
    print('  - Cache Tutoriels Pro: ${_cachedProTutorials?.length ?? 0} items');
    print('  - Cache Tutoriels Client: ${_cachedClientTutorials?.length ?? 0} items');
    print('  - Derni√®re MAJ FAQ: ${_lastFaqFetchTime?.toString() ?? 'Jamais'}');
    print('  - Derni√®re MAJ Tutoriels: ${_lastTutorialsFetchTime?.toString() ?? 'Jamais'}');

    // Test des fonctionnalit√©s
    try {
      final proFAQs = await getFAQItems(userType: 'pro');
      final clientFAQs = await getFAQItems(userType: 'client');
      final proTutorials = await getTutorials(userType: 'pro');
      final clientTutorials = await getTutorials(userType: 'client');

      print('  - FAQ Pro r√©cup√©r√©es: ${proFAQs.length}');
      print('  - FAQ Client r√©cup√©r√©es: ${clientFAQs.length}');
      print('  - Tutoriels Pro r√©cup√©r√©s: ${proTutorials.length}');
      print('  - Tutoriels Client r√©cup√©r√©s: ${clientTutorials.length}');
    } catch (e) {
      print('  - Erreur test fonctionnalit√©s: $e');
    }
  }

  // ========================
  // M√âTHODES PRIV√âES - G√âN√âRATION DONN√âES D√âMO
  // ========================

  void _generateMockSupportHistory(String userId) {
    final subjects = [
      'Probl√®me de connexion √† mon compte',
      'Question sur la facturation',
      'Demande de fonctionnalit√©',
      'Bug dans l\'application mobile',
      'Aide pour configurer mon profil',
      'Probl√®me d\'affichage des statistiques',
    ];

    final statuses = ['resolved', 'in_progress', 'closed'];

    for (int i = 0; i < Random().nextInt(4) + 1; i++) {
      final requestId = 'DEMO-HIST-${(Random().nextInt(9000) + 1000)}';
      final daysAgo = Random().nextInt(60) + 1;
      
      final request = {
        'id': requestId,
        'userId': userId,
        'userEmail': 'demo@kipik.app',
        'subject': subjects[Random().nextInt(subjects.length)],
        'message': '[D√âMO] Description d√©taill√©e du probl√®me rencontr√©...',
        'userType': 'pro',
        'attachmentUrls': [],
        'timestamp': DateTime.now().subtract(Duration(days: daysAgo)).toIso8601String(),
        'status': statuses[Random().nextInt(statuses.length)],
        'priority': ['low', 'medium', 'high'][Random().nextInt(3)],
        'responseTime': '${Random().nextInt(48) + 2}h',
        '_source': 'mock',
        '_demoData': true,
      };

      if (!_mockSupportRequests.containsKey(userId)) {
        _mockSupportRequests[userId] = [];
      }
      _mockSupportRequests[userId]!.add(request);
    }
  }

  // ‚úÖ DONN√âES DE D√âMO ENRICHIES
  List<FAQItem> _getEnhancedDemoFAQItems({required String userType}) {
    if (userType == 'pro') {
      return [
        FAQItem(
          id: '1',
          question: 'Comment modifier mes informations de facturation ?',
          answer: '[D√âMO] Pour modifier vos informations de facturation, acc√©dez √† votre profil en cliquant sur l\'ic√¥ne en haut √† droite, puis s√©lectionnez "Param√®tres" > "Facturation". Vous pourrez y mettre √† jour vos coordonn√©es, m√©thodes de paiement et pr√©f√©rences de facturation.\n\nLes modifications sont prises en compte imm√©diatement et s\'appliquent √† votre prochaine facture.',
          category: 'Facturation',
          relatedLinks: [
            RelatedLink(
              label: 'G√©rer vos m√©thodes de paiement',
              url: 'https://www.kipik.fr/aide/pro/paiement',
            ),
            RelatedLink(
              label: 'Consulter vos factures',
              url: 'https://www.kipik.fr/aide/pro/factures',
            ),
          ],
        ),
        FAQItem(
          id: '2',
          question: 'Comment ajouter un nouvel utilisateur √† mon compte professionnel ?',
          answer: '[D√âMO] Pour ajouter un nouvel utilisateur √† votre compte professionnel, rendez-vous dans "Param√®tres" > "Utilisateurs" > "Ajouter un utilisateur". Saisissez l\'adresse e-mail de la personne √† inviter et s√©lectionnez son niveau d\'acc√®s.\n\nNiveaux d\'acc√®s disponibles :\n‚Ä¢ Administrateur : Acc√®s complet\n‚Ä¢ Gestionnaire : Modification sans suppression\n‚Ä¢ √âditeur : Ajout et modification de contenu\n‚Ä¢ Lecteur : Consultation uniquement\n\nUn e-mail d\'invitation sera automatiquement envoy√© avec les instructions pour rejoindre votre espace.',
          category: 'Gestion √©quipe',
          relatedLinks: [
            RelatedLink(
              label: 'G√©rer les acc√®s utilisateurs',
              url: 'https://www.kipik.fr/aide/pro/utilisateurs',
            ),
          ],
        ),
        FAQItem(
          id: '3',
          question: 'Quelles sont les diff√©rences entre les formules d\'abonnement ?',
          answer: '[D√âMO] Kipik propose trois formules d\'abonnement professionnel adapt√©es √† vos besoins :\n\n**Essentiel (29‚Ç¨/mois)**\n‚Ä¢ Fonctionnalit√©s de base\n‚Ä¢ Jusqu\'√† 5 utilisateurs\n‚Ä¢ Support standard\n\n**Premium (79‚Ç¨/mois)**\n‚Ä¢ Fonctionnalit√©s avanc√©es\n‚Ä¢ Utilisateurs illimit√©s\n‚Ä¢ Analytics d√©taill√©es\n‚Ä¢ Support prioritaire\n\n**Entreprise (149‚Ç¨/mois)**\n‚Ä¢ Toutes les fonctionnalit√©s\n‚Ä¢ API compl√®te\n‚Ä¢ Accompagnement d√©di√©\n‚Ä¢ SLA garanti\n\nVous pouvez changer de formule √† tout moment depuis votre espace de gestion.',
          category: 'Abonnement',
          relatedLinks: [
            RelatedLink(
              label: 'Comparer nos formules',
              url: 'https://www.kipik.fr/tarifs',
            ),
            RelatedLink(
              label: 'Changer de formule',
              url: 'https://www.kipik.fr/aide/pro/changer-formule',
            ),
          ],
        ),
        FAQItem(
          id: '4',
          question: 'Comment exporter mes donn√©es et statistiques ?',
          answer: '[D√âMO] Pour exporter vos donn√©es et statistiques, plusieurs options s\'offrent √† vous :\n\n**Export par section :**\nAcc√©dez √† la section "Statistiques" depuis le menu principal. En haut √† droite de chaque graphique ou tableau, cliquez sur l\'ic√¥ne d\'exportation et choisissez le format souhait√© (CSV, Excel, PDF).\n\n**Export global :**\nUtilisez la fonction "Exportation globale" accessible depuis "Param√®tres" > "Donn√©es et confidentialit√©" pour t√©l√©charger toutes vos donn√©es d\'un coup.\n\n**Programmation d\'exports :**\nVous pouvez programmer des exports automatiques hebdomadaires ou mensuels pour recevoir vos statistiques par e-mail.',
          category: 'Donn√©es',
          relatedLinks: [
            RelatedLink(
              label: 'Guide d\'analyse des statistiques',
              url: 'https://www.kipik.fr/aide/pro/statistiques',
            ),
          ],
        ),
        FAQItem(
          id: '5',
          question: 'Comment s√©curiser mon compte avec l\'authentification √† deux facteurs ?',
          answer: '[D√âMO] L\'authentification √† deux facteurs (2FA) ajoute une couche de s√©curit√© suppl√©mentaire √† votre compte :\n\n**Activation :**\n1. Rendez-vous dans "Param√®tres" > "S√©curit√©"\n2. Cliquez sur "Activer l\'authentification √† deux facteurs"\n3. Choisissez votre m√©thode pr√©f√©r√©e\n\n**M√©thodes disponibles :**\n‚Ä¢ SMS : Recevez un code par texto\n‚Ä¢ Application : Utilisez Google Authenticator, Authy ou similar\n‚Ä¢ Cl√© de s√©curit√© : Compatible FIDO2/WebAuthn\n\n**Important :** Conservez pr√©cieusement vos codes de r√©cup√©ration dans un endroit s√ªr.',
          category: 'S√©curit√©',
          relatedLinks: [
            RelatedLink(
              label: 'Bonnes pratiques de s√©curit√©',
              url: 'https://www.kipik.fr/aide/pro/securite-compte',
            ),
          ],
        ),
        FAQItem(
          id: '6',
          question: 'Comment int√©grer Kipik avec mon syst√®me existant ?',
          answer: '[D√âMO] Kipik offre plusieurs options d\'int√©gration pour s\'adapter √† votre √©cosyst√®me :\n\n**API REST compl√®te :**\n‚Ä¢ Documentation compl√®te disponible\n‚Ä¢ Authentification s√©curis√©e OAuth 2.0\n‚Ä¢ Webhooks pour notifications en temps r√©el\n\n**Connecteurs pr√™ts √† l\'emploi :**\n‚Ä¢ CRM : Salesforce, HubSpot, Pipedrive\n‚Ä¢ Comptabilit√© : QuickBooks, Sage, Cegid\n‚Ä¢ E-commerce : Shopify, WooCommerce, Prestashop\n\n**Support technique d√©di√© :**\nNotre √©quipe technique vous accompagne dans la mise en ≈ìuvre de l\'int√©gration.',
          category: 'Int√©grations',
          relatedLinks: [
            RelatedLink(
              label: 'Documentation API',
              url: 'https://developers.kipik.fr',
            ),
          ],
        ),
      ];
    } else {
      // FAQ pour les clients avec plus de contenu
      return [
        FAQItem(
          id: '1',
          question: 'Comment cr√©er un compte Kipik ?',
          answer: '[D√âMO] Cr√©er un compte Kipik est simple et rapide :\n\n**√âtape 1 : T√©l√©chargement**\nT√©l√©chargez l\'application depuis l\'App Store (iOS) ou Google Play Store (Android).\n\n**√âtape 2 : Inscription**\n‚Ä¢ Ouvrez l\'application\n‚Ä¢ Cliquez sur "S\'inscrire"\n‚Ä¢ Choisissez votre m√©thode : e-mail, Google, Facebook ou Apple\n\n**√âtape 3 : V√©rification**\n‚Ä¢ Confirmez votre adresse e-mail\n‚Ä¢ Compl√©tez votre profil\n‚Ä¢ Ajoutez une photo (optionnel)\n\n**√âtape 4 : D√©couverte**\nSuivez le tour guid√© pour d√©couvrir les fonctionnalit√©s principales.',
          category: 'Compte',
          relatedLinks: [
            RelatedLink(
              label: 'T√©l√©charger l\'application',
              url: 'https://www.kipik.fr/telecharger',
            ),
            RelatedLink(
              label: 'Guide de premi√®re utilisation',
              url: 'https://www.kipik.fr/aide/premiers-pas',
            ),
          ],
        ),
        FAQItem(
          id: '2',
          question: 'Comment r√©initialiser mon mot de passe ?',
          answer: '[D√âMO] Pour r√©initialiser votre mot de passe en toute s√©curit√© :\n\n**Sur l\'application mobile :**\n1. Ouvrez l\'application Kipik\n2. Sur l\'√©cran de connexion, tapez "Mot de passe oubli√©"\n3. Saisissez votre adresse e-mail\n4. V√©rifiez votre bo√Æte mail (et vos spams)\n5. Cliquez sur le lien re√ßu\n6. Cr√©ez votre nouveau mot de passe\n\n**Sur le site web :**\nLa proc√©dure est identique depuis www.kipik.fr\n\n**Conseils s√©curit√© :**\n‚Ä¢ Utilisez un mot de passe unique et complexe\n‚Ä¢ Activez l\'authentification √† deux facteurs\n‚Ä¢ Ne partagez jamais vos identifiants',
          category: 'Compte',
          relatedLinks: [
            RelatedLink(
              label: 'S√©curiser mon compte',
              url: 'https://www.kipik.fr/aide/securite',
            ),
          ],
        ),
        FAQItem(
          id: '3',
          question: 'Comment trouver un tatoueur pr√®s de moi ?',
          answer: '[D√âMO] Kipik vous aide √† trouver le tatoueur parfait pr√®s de chez vous :\n\n**Recherche g√©olocalis√©e :**\n‚Ä¢ Autorisez la g√©olocalisation dans l\'app\n‚Ä¢ Utilisez l\'onglet "Explorer" > "Pr√®s de moi"\n‚Ä¢ Ajustez le rayon de recherche (5 √† 100 km)\n\n**Filtres de recherche :**\n‚Ä¢ Style de tatouage (traditionnel, r√©alisme, etc.)\n‚Ä¢ Note minimum des clients\n‚Ä¢ Tarifs\n‚Ä¢ Disponibilit√©\n\n**Informations d√©taill√©es :**\n‚Ä¢ Portfolio complet\n‚Ä¢ Avis clients v√©rifi√©s\n‚Ä¢ Tarifs et disponibilit√©s\n‚Ä¢ Contact direct via l\'app',
          category: 'Recherche',
          relatedLinks: [
            RelatedLink(
              label: 'Guide de recherche avanc√©e',
              url: 'https://www.kipik.fr/aide/recherche-tatoueur',
            ),
          ],
        ),
        FAQItem(
          id: '4',
          question: 'Comment prendre rendez-vous avec un tatoueur ?',
          answer: '[D√âMO] Prendre rendez-vous via Kipik est simple et s√©curis√© :\n\n**√âtapes de r√©servation :**\n1. Consultez le profil du tatoueur\n2. V√©rifiez ses disponibilit√©s en temps r√©el\n3. Choisissez un cr√©neau libre\n4. D√©crivez votre projet en d√©tail\n5. Joignez des images de r√©f√©rence\n6. Confirmez votre demande\n\n**Validation du rendez-vous :**\n‚Ä¢ Le tatoueur examine votre demande\n‚Ä¢ Il peut vous poser des questions\n‚Ä¢ Il confirme ou propose un autre cr√©neau\n‚Ä¢ Vous recevez une notification de confirmation\n\n**Avant le rendez-vous :**\n‚Ä¢ Rappel automatique 24h avant\n‚Ä¢ Possibilit√© de reporter si n√©cessaire\n‚Ä¢ Pr√©paration avec les conseils du tatoueur',
          category: 'Rendez-vous',
          relatedLinks: [
            RelatedLink(
              label: 'Pr√©parer son premier tatouage',
              url: 'https://www.kipik.fr/aide/premier-tatouage',
            ),
          ],
        ),
      ];
    }
  }

  List<Tutorial> _getEnhancedDemoTutorials({required String userType}) {
    if (userType == 'pro') {
      return [
        Tutorial(
          id: '1',
          title: 'Premiers pas avec Kipik Pro',
          description: '[D√âMO] D√©couvrez les fonctionnalit√©s essentielles pour bien d√©marrer avec Kipik Pro et maximiser votre succ√®s.',
          content: '[D√âMO] Bienvenue sur Kipik Pro ! Ce tutoriel vous guidera √† travers les premi√®res √©tapes pour configurer votre compte professionnel et commencer √† utiliser nos fonctionnalit√©s avanc√©es.\n\n**1. Configuration du profil entreprise**\n‚Ä¢ Ajoutez votre logo et informations de contact\n‚Ä¢ D√©finissez vos sp√©cialit√©s et styles\n‚Ä¢ Configurez vos tarifs et disponibilit√©s\n\n**2. Personnalisation de votre espace**\n‚Ä¢ Choisissez votre th√®me et couleurs\n‚Ä¢ Organisez votre portfolio\n‚Ä¢ Configurez vos notifications\n\n**3. Invitation de vos collaborateurs**\n‚Ä¢ D√©finissez les r√¥les et permissions\n‚Ä¢ Envoyez les invitations par email\n‚Ä¢ Formez votre √©quipe aux bonnes pratiques\n\n**4. Configuration des param√®tres de base**\n‚Ä¢ Modes de paiement accept√©s\n‚Ä¢ Politiques d\'annulation\n‚Ä¢ Conditions g√©n√©rales\n\n**5. Premiers ajouts de contenu**\n‚Ä¢ Upload de votre portfolio\n‚Ä¢ Cr√©ation de vos premiers services\n‚Ä¢ Publication de votre profil\n\nPour commencer, acc√©dez √† votre tableau de bord en vous connectant √† votre compte...',
          category: 'D√©marrage',
          videoUrl: 'https://www.youtube.com/watch?v=demoKipikPro1',
          thumbnailUrl: 'https://picsum.photos/seed/tutorial1/640/360',
        ),
        Tutorial(
          id: '2',
          title: 'Analyse des statistiques de performance',
          description: '[D√âMO] Apprenez √† interpr√©ter les donn√©es statistiques pour optimiser votre activit√© et augmenter vos revenus.',
          content: '[D√âMO] Les statistiques de Kipik Pro vous permettent de suivre l\'ensemble de vos performances et d\'identifier les opportunit√©s d\'am√©lioration. Ce tutoriel d√©taille les diff√©rentes m√©triques disponibles et comment les exploiter efficacement.\n\n**Le tableau de bord principal pr√©sente :**\n‚Ä¢ Nombre total de clients et prospects\n‚Ä¢ Chiffre d\'affaires mensuel et √©volution\n‚Ä¢ Tendances de croissance et saisonnalit√©\n‚Ä¢ Sources de trafic et conversion\n‚Ä¢ Taux de satisfaction client\n\n**Analyses d√©taill√©es disponibles :**\n‚Ä¢ Performance par style de tatouage\n‚Ä¢ R√©partition g√©ographique de votre client√®le\n‚Ä¢ Temps de r√©ponse moyen\n‚Ä¢ Taux de conversion des devis\n‚Ä¢ Revenus par client (LTV)\n\n**Comment optimiser gr√¢ce aux donn√©es :**\n‚Ä¢ Identifiez vos services les plus rentables\n‚Ä¢ Ajustez vos tarifs selon la demande\n‚Ä¢ Optimisez vos cr√©neaux de disponibilit√©\n‚Ä¢ Am√©liorez votre taux de conversion\n\nPour acc√©der √† des analyses plus d√©taill√©es, cliquez sur...',
          category: 'Analytics',
          videoUrl: null,
          thumbnailUrl: 'https://picsum.photos/seed/tutorial2/640/360',
        ),
        Tutorial(
          id: '3',
          title: 'Configuration des notifications automatiques',
          description: '[D√âMO] Param√©trez les notifications pour vos clients et votre √©quipe afin d\'am√©liorer la communication et la satisfaction.',
          content: '[D√âMO] Les notifications automatiques permettent d\'informer vos clients et collaborateurs des √©v√©nements importants. Ce tutoriel vous guide pour les configurer selon vos besoins et votre style de communication.\n\n**Types de notifications client :**\n‚Ä¢ Confirmations de rendez-vous\n‚Ä¢ Rappels 24h et 2h avant\n‚Ä¢ Demandes de feedback post-service\n‚Ä¢ Promotions et offres sp√©ciales\n‚Ä¢ Conseils de soins apr√®s tatouage\n\n**Notifications internes √©quipe :**\n‚Ä¢ Nouvelles demandes de rendez-vous\n‚Ä¢ Annulations et modifications\n‚Ä¢ Alertes de planning\n‚Ä¢ Objectifs et performances\n‚Ä¢ Messages clients urgents\n\n**Rapports automatiques :**\n‚Ä¢ Statistiques quotidiennes\n‚Ä¢ R√©sum√©s hebdomadaires\n‚Ä¢ Bilans mensuels\n‚Ä¢ Analyses trimestrielles\n\n**Personnalisation avanc√©e :**\n‚Ä¢ Ton et style de communication\n‚Ä¢ Horaires d\'envoi optimaux\n‚Ä¢ Fr√©quence et timing\n‚Ä¢ Templates personnalis√©s\n\nPour commencer la configuration, acc√©dez √† "Param√®tres" > "Notifications"...',
          category: 'Communication',
          videoUrl: 'https://www.youtube.com/watch?v=demoKipikPro3',
          thumbnailUrl: 'https://picsum.photos/seed/tutorial3/640/360',
        ),
        Tutorial(
          id: '4',
          title: 'Gestion des utilisateurs et des permissions',
          description: '[D√âMO] Contr√¥lez pr√©cis√©ment qui a acc√®s √† quelles fonctionnalit√©s dans votre espace pour une s√©curit√© optimale.',
          content: '[D√âMO] La gestion des utilisateurs et des permissions vous permet de contr√¥ler les acc√®s √† votre espace Kipik Pro. Ce tutoriel explique comment cr√©er des r√¥les personnalis√©s et attribuer des permissions sp√©cifiques selon les besoins de votre √©quipe.\n\n**Niveaux d\'acc√®s pr√©d√©finis :**\n‚Ä¢ **Propri√©taire** : Contr√¥le total, facturation, suppression\n‚Ä¢ **Administrateur** : Acc√®s complet sauf facturation\n‚Ä¢ **Gestionnaire** : Peut modifier mais pas supprimer\n‚Ä¢ **Tatoueur** : G√®re ses rendez-vous et portfolio\n‚Ä¢ **Accueil** : Consultation et prise de rendez-vous\n‚Ä¢ **Lecteur** : Acc√®s en lecture seule aux statistiques\n\n**Permissions d√©taill√©es :**\n‚Ä¢ Gestion des rendez-vous\n‚Ä¢ Modification des tarifs\n‚Ä¢ Acc√®s aux statistiques financi√®res\n‚Ä¢ Gestion du portfolio\n‚Ä¢ Communication avec les clients\n‚Ä¢ Param√©trage de l\'espace\n\n**Bonnes pratiques de s√©curit√© :**\n‚Ä¢ Principe du moindre privil√®ge\n‚Ä¢ R√©vision r√©guli√®re des acc√®s\n‚Ä¢ Audit des connexions\n‚Ä¢ Mots de passe forts obligatoires\n\nPour cr√©er un nouveau r√¥le personnalis√©, acc√©dez √† "Param√®tres" > "Utilisateurs" > "R√¥les"...',
          category: 'S√©curit√©',
          videoUrl: null,
          thumbnailUrl: 'https://picsum.photos/seed/tutorial4/640/360',
        ),
        Tutorial(
          id: '5',
          title: 'Optimisation de votre facturation',
          description: '[D√âMO] Automatisez et personnalisez vos factures pour gagner du temps et am√©liorer votre tr√©sorerie.',
          content: '[D√âMO] Une facturation efficace est essentielle pour toute entreprise. Ce tutoriel vous montre comment automatiser et personnaliser votre processus de facturation avec Kipik Pro pour optimiser votre tr√©sorerie et votre relation client.\n\n**Fonctionnalit√©s de facturation :**\n‚Ä¢ Devis automatiques avec templates\n‚Ä¢ Facturation pro avec votre identit√©\n‚Ä¢ Gestion des acomptes et √©chelonnements\n‚Ä¢ Relances automatiques de paiement\n‚Ä¢ Int√©gration comptable\n\n**Personnalisation avanc√©e :**\n‚Ä¢ Templates de facture √† votre image\n‚Ä¢ Num√©rotation automatique\n‚Ä¢ Mentions l√©gales personnalis√©es\n‚Ä¢ Conditions de paiement flexibles\n‚Ä¢ Multidevises pour l\'international\n\n**Automatisation intelligente :**\n‚Ä¢ G√©n√©ration automatique apr√®s service\n‚Ä¢ Envoi par email avec accus√© de r√©ception\n‚Ä¢ Relances programm√©es J+30, J+45, J+60\n‚Ä¢ Notifications de paiement re√ßu\n‚Ä¢ Archivage automatique\n\n**Int√©grations comptables :**\n‚Ä¢ Export vers votre logiciel comptable\n‚Ä¢ Synchronisation avec votre banque\n‚Ä¢ Rapports TVA automatiques\n‚Ä¢ D√©clarations simplifi√©es\n\nPour commencer, acc√©dez √† "Facturation" dans votre menu principal...',
          category: 'Facturation',
          videoUrl: 'https://www.youtube.com/watch?v=demoKipikPro5',
          thumbnailUrl: 'https://picsum.photos/seed/tutorial5/640/360',
        ),
        Tutorial(
          id: '6',
          title: 'Marketing et fid√©lisation client',
          description: '[D√âMO] D√©veloppez votre client√®le et fid√©lisez vos clients avec nos outils marketing int√©gr√©s.',
          content: '[D√âMO] Kipik Pro vous offre des outils marketing puissants pour d√©velopper votre activit√© et fid√©liser votre client√®le. Ce tutoriel vous montre comment cr√©er des campagnes efficaces et mesurer leur impact.\n\n**Outils de prospection :**\n‚Ä¢ Pages de capture optimis√©es\n‚Ä¢ Formulaires de contact intelligents\n‚Ä¢ SEO local automatique\n‚Ä¢ R√©f√©rencement Google My Business\n‚Ä¢ Int√©gration r√©seaux sociaux\n\n**Campagnes de fid√©lisation :**\n‚Ä¢ Programmes de fid√©lit√© personnalis√©s\n‚Ä¢ Emails de suivi automatiques\n‚Ä¢ Offres anniversaire et saisonni√®res\n‚Ä¢ Parrainage avec r√©compenses\n‚Ä¢ Enqu√™tes de satisfaction\n\n**Marketing automation :**\n‚Ä¢ Sc√©narios email personnalis√©s\n‚Ä¢ Segmentation client avanc√©e\n‚Ä¢ Scoring comportemental\n‚Ä¢ Retargeting automatique\n‚Ä¢ A/B testing int√©gr√©\n\n**Mesure de performance :**\n‚Ä¢ ROI des campagnes\n‚Ä¢ Taux d\'ouverture et clics\n‚Ä¢ Conversion et attribution\n‚Ä¢ LTV client\n‚Ä¢ Co√ªt d\'acquisition\n\nPour lancer votre premi√®re campagne...',
          category: 'Marketing',
          videoUrl: 'https://www.youtube.com/watch?v=demoKipikPro6',
          thumbnailUrl: 'https://picsum.photos/seed/tutorial6/640/360',
        ),
      ];
    } else {
      // Tutoriels pour les clients avec plus de contenu
      return [
        Tutorial(
          id: '1',
          title: 'Comment cr√©er votre premier projet de tatouage',
          description: '[D√âMO] Guide complet pour cr√©er et configurer votre premier projet de tatouage sur Kipik, de l\'id√©e √† la r√©alisation.',
          content: '[D√âMO] Ce tutoriel vous guide pas √† pas pour cr√©er votre premier projet de tatouage sur l\'application Kipik. Vous apprendrez √† exprimer votre vision, choisir le bon tatoueur et pr√©parer votre s√©ance.\n\n**√âtape 1 : D√©finir votre projet**\n‚Ä¢ D√©crivez votre id√©e en d√©tail\n‚Ä¢ Choisissez l\'emplacement sur votre corps\n‚Ä¢ Estimez la taille souhait√©e\n‚Ä¢ D√©finissez votre budget\n‚Ä¢ S√©lectionnez le style artistique\n\n**√âtape 2 : Rassembler vos r√©f√©rences**\n‚Ä¢ Cr√©ez un mood board\n‚Ä¢ Collectez des images d\'inspiration\n‚Ä¢ Notez les √©l√©ments importants\n‚Ä¢ Pr√©cisez les couleurs souhait√©es\n‚Ä¢ Ajoutez des d√©tails personnels\n\n**√âtape 3 : Rechercher le bon tatoueur**\n‚Ä¢ Filtrez par style et localisation\n‚Ä¢ Consultez les portfolios\n‚Ä¢ Lisez les avis clients\n‚Ä¢ V√©rifiez les certifications\n‚Ä¢ Comparez les tarifs\n\n**√âtape 4 : Prendre contact**\n‚Ä¢ Envoyez votre projet d√©taill√©\n‚Ä¢ Planifiez une consultation\n‚Ä¢ Discutez des adaptations\n‚Ä¢ Validez le devis\n‚Ä¢ Programmez la s√©ance\n\n**Conseils pour un premier tatouage r√©ussi**\n‚Ä¢ Prenez votre temps pour r√©fl√©chir\n‚Ä¢ N\'h√©sitez pas √† poser des questions\n‚Ä¢ Pr√©parez-vous physiquement et mentalement\n‚Ä¢ Suivez les conseils d\'hygi√®ne\n‚Ä¢ Planifiez la cicatrisation',
          category: 'Projets',
          videoUrl: 'https://www.youtube.com/watch?v=demoKipikClient1',
          thumbnailUrl: 'https://picsum.photos/seed/client-tutorial1/640/360',
        ),
        Tutorial(
          id: '2',
          title: 'Partager vos cr√©ations avec la communaut√©',
          description: '[D√âMO] D√©couvrez comment partager vos tatouages, obtenir des retours et inspirer d\'autres passionn√©s sur Kipik.',
          content: '[D√âMO] Kipik vous permet de partager facilement vos cr√©ations avec une communaut√© de passionn√©s. Ce tutoriel vous montre comment mettre en valeur vos tatouages et interagir avec d\'autres utilisateurs.\n\n**Photographier votre tatouage :**\n‚Ä¢ Utilisez un bon √©clairage naturel\n‚Ä¢ Nettoyez d√©licatement la zone\n‚Ä¢ Trouvez le bon angle\n‚Ä¢ √âvitez les reflets et ombres\n‚Ä¢ Prenez plusieurs photos\n\n**Publier sur Kipik :**\n‚Ä¢ Acc√©dez √† "Mon Portfolio"\n‚Ä¢ Cliquez sur "Ajouter une cr√©ation"\n‚Ä¢ T√©l√©chargez vos meilleures photos\n‚Ä¢ R√©digez une description engageante\n‚Ä¢ Ajoutez les tags appropri√©s\n‚Ä¢ Mentionnez votre tatoueur\n‚Ä¢ Partagez votre histoire\n\n**Optimiser votre visibilit√© :**\n‚Ä¢ Utilisez des hashtags pertinents\n‚Ä¢ D√©crivez le processus cr√©atif\n‚Ä¢ Mentionnez l\'inspiration\n‚Ä¢ Ajoutez la localisation\n‚Ä¢ Interagissez avec les commentaires\n\n**Partage externe :**\n‚Ä¢ Instagram et Facebook int√©gr√©s\n‚Ä¢ Liens directs √† envoyer\n‚Ä¢ QR codes pour portfolio\n‚Ä¢ Export haute qualit√©\n‚Ä¢ Stories temporaires\n\n**Rejoindre la communaut√© :**\n‚Ä¢ Likez et commentez\n‚Ä¢ Suivez vos tatoueurs favoris\n‚Ä¢ Participez aux d√©fis\n‚Ä¢ Partagez vos conseils\n‚Ä¢ Organisez des meetups locaux',
          category: 'Communaut√©',
          videoUrl: null,
          thumbnailUrl: 'https://picsum.photos/seed/client-tutorial2/640/360',
        ),
        Tutorial(
          id: '3',
          title: 'Pr√©parer et entretenir votre tatouage',
          description: '[D√âMO] Guide complet pour bien pr√©parer votre s√©ance de tatouage et assurer une cicatrisation optimale.',
          content: '[D√âMO] Un tatouage r√©ussi commence avant la s√©ance et se termine bien apr√®s. Ce guide vous accompagne dans toutes les √©tapes pour un r√©sultat optimal et une cicatrisation parfaite.\n\n**Pr√©paration avant la s√©ance :**\n‚Ä¢ Dormez suffisamment la veille\n‚Ä¢ Mangez un bon repas 2h avant\n‚Ä¢ Hydratez-vous bien\n‚Ä¢ √âvitez alcool et drogues\n‚Ä¢ Rasez la zone si n√©cessaire\n‚Ä¢ Portez des v√™tements adapt√©s\n‚Ä¢ Pr√©parez votre trousse de soins\n\n**Pendant la s√©ance :**\n‚Ä¢ Respirez calmement et profond√©ment\n‚Ä¢ Communiquez avec votre tatoueur\n‚Ä¢ Faites des pauses si n√©cessaire\n‚Ä¢ Hydratez-vous r√©guli√®rement\n‚Ä¢ √âvitez de regarder si √ßa vous stresse\n‚Ä¢ √âcoutez de la musique relaxante\n\n**Soins post-tatouage (J0 √† J3) :**\n‚Ä¢ Retirez le pansement apr√®s 2-4h\n‚Ä¢ Nettoyez d√©licatement √† l\'eau ti√®de\n‚Ä¢ Appliquez une cr√®me cicatrisante\n‚Ä¢ √âvitez les frottements\n‚Ä¢ Pas de bain ni piscine\n‚Ä¢ Prot√©gez du soleil\n\n**Cicatrisation (J4 √† J21) :**\n‚Ä¢ Continuez les soins quotidiens\n‚Ä¢ Hydratez avec une cr√®me neutre\n‚Ä¢ Ne grattez pas les cro√ªtes\n‚Ä¢ √âvitez les v√™tements serr√©s\n‚Ä¢ Surveillez les signes d\'infection\n‚Ä¢ Consultez si probl√®me\n\n**Entretien √† long terme :**\n‚Ä¢ Protection solaire syst√©matique\n‚Ä¢ Hydratation r√©guli√®re\n‚Ä¢ Retouches si n√©cessaire\n‚Ä¢ Photos d\'√©volution\n‚Ä¢ Suivi avec votre tatoueur',
          category: 'Soins',
          videoUrl: 'https://www.youtube.com/watch?v=demoKipikClient3',
          thumbnailUrl: 'https://picsum.photos/seed/client-tutorial3/640/360',
        ),
      ];
    }
  }
}